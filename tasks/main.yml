---
- name: "Choose platform based task"
  include_tasks: "{{ platform }}"
  with_first_found:
    - "system/{{ ansible_os_family }}.yml"
    - "system/not-supported.yml"
  loop_control:
    loop_var: platform

- name: "Install pip packages"
  pip:
    name: "{{ item }}"
  loop:
    - lxml
    - beautifulsoup4
    - boto3
  become: True

- name: "Create hybris-tools directory"
  file:
    path: "{{ htools_hybris_tools_path }}"
    owner: root
    group: root
    mode: 0755
    state: directory
  become: True

- name: "Copy hybris-preinstall config file"
  template:
    src: h-tools.j2
    dest: /etc/default/h-tools
    owner: root
    group: root
    mode: 0600
    backup: True
  become: True

- name: "Copy hybris-preinstall files"
  copy:
    src: "{{ role_path }}/files/{{ item.value.path }}"
    dest: "/{{ item.value.path }}"
    owner: "{{ item.value.owner }}"
    group: "{{ item.value.group }}"
    mode: "{{ item.value.mode | int }}"
  with_dict: "{{ htools_files }}"
  become: True

- name: "Run healthcheck"
  include_tasks: yhealthcheck.yml

- name: "Prepare paths"
  file:
    path: "{{ hypath_item }}"
    state: directory
    owner: "{{ htools_username }}"
    group: "{{ htools_groupname }}"
    recurse: True
  loop_control:
    loop_var: hypath_item
  loop:
    - "{{ htools_hybris_path }}/bin/platform/tomcat/bin"
  become: True

- name: "Prepare hybris service"
  template:
    src: hybrisserver.sh.j2
    dest: "{{ htools_hybris_path }}/bin/platform/hybrisserver.sh"
    owner: "{{ hybrisd_service_username }}"
    group: "{{ hybrisd_service_groupname }}"
    force: False
  become: True

- name: "Make sure h-up may launch successfully"
  command: "{{ htools_hybris_tools_path }}/h-up --help"
  register: command_hu_result
  failed_when: command_hu_result.rc != 0
  changed_when: False
  become: True

- name: "Adding selinux support"
  include_tasks: selinux-support.yml
